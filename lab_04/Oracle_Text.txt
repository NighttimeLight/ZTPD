1.
CREATE TABLE cytaty AS SELECT * FROM ZSBD_TOOLS.cytaty;

2.
SELECT * FROM cytaty
WHERE
    LOWER(tekst) LIKE '%pesymista%' AND
    LOWER(tekst) LIKE '%optymista%';

3.
CREATE INDEX CYTATY_TEKST_IDX ON cytaty(tekst)
    INDEXTYPE IS CTXSYS.CONTEXT;

4.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'optymista & pesymista')>0;

5.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'pesymista not optymista')>0;

6.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'NEAR((optymista, pesymista), 3)')>0;

7.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'NEAR((optymista, pesymista), 10)')>0;

8.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'życi%')>0;

9.
SELECT autor, tekst, SCORE(1) AS DOPASOWANIE FROM cytaty
WHERE CONTAINS(tekst, 'życi%', 1)>0;

10.
SELECT autor, tekst, SCORE(1) AS DOPASOWANIE FROM cytaty
WHERE CONTAINS(tekst, 'życi%', 1)>0
ORDER BY DOPASOWANIE DESC
FETCH FIRST ROW ONLY;

11.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, '!probelm', 1)>0;

12.
INSERT INTO cytaty VALUES (
    39,
    'Bertrand Russell',
    'To smutne, że głupcy są tacy pewni siebie, a ludzie rozsądni tacy pełni wątpliwości.'
);
COMMIT;

13.
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'głupcy')>0;
--new row not in index yet

14.
SELECT * FROM DR$CYTATY_TEKST_IDX$I;

15.
DROP INDEX CYTATY_TEKST_IDX;
CREATE INDEX CYTATY_TEKST_IDX ON cytaty(tekst)
    INDEXTYPE IS CTXSYS.CONTEXT;

16.
SELECT * FROM DR$CYTATY_TEKST_IDX$I;
SELECT * FROM cytaty
WHERE CONTAINS(tekst, 'głupcy')>0;

17.
DROP INDEX CYTATY_TEKST_IDX;
DROP TABLE cytaty;


1.
CREATE TABLE quotes AS SELECT * FROM ZSBD_TOOLS.quotes;

2.
CREATE INDEX QUOTES_TEXT_IDX ON quotes(text)
    INDEXTYPE IS CTXSYS.CONTEXT;

3.
SELECT * FROM quotes WHERE CONTAINS(text, 'work')>0;
SELECT * FROM quotes WHERE CONTAINS(text, '$work')>0;
SELECT * FROM quotes WHERE CONTAINS(text, 'working')>0;
SELECT * FROM quotes WHERE CONTAINS(text, '$working')>0;

4.
SELECT * FROM quotes WHERE CONTAINS(text, 'it')>0;
--nothing found, 'it' on stoplist

5.
SELECT * FROM CTX_STOPLISTS;
--DEFAULT_STOPLIST

6.
SELECT * FROM CTX_STOPWORDS WHERE spw_stoplist = 'DEFAULT_STOPLIST';

7.
DROP INDEX QUOTES_TEXT_IDX;
CREATE INDEX QUOTES_TEXT_IDX ON quotes(text)
    INDEXTYPE IS CTXSYS.CONTEXT
    PARAMETERS('stoplist CTXSYS.EMPTY_STOPLIST');

8.
SELECT * FROM quotes WHERE CONTAINS(text, 'it')>0;
--12 rows fetched

9.
SELECT * FROM quotes
WHERE CONTAINS(text, 'fool & humans')>0;

10.
SELECT * FROM quotes
WHERE CONTAINS(text, 'fool & computer')>0;

11.
SELECT * FROM quotes
WHERE CONTAINS(text, '(fool & humans) within SENTENCE')>0;
--index has no sention SENTENCE defined

12.
DROP INDEX QUOTES_TEXT_IDX;

13.
BEGIN
    ctx_ddl.create_section_group('nullgroup', 'NULL_SECTION_GROUP');
    ctx_ddl.add_special_section('nullgroup', 'SENTENCE');
    ctx_ddl.add_special_section('nullgroup', 'PARAGRAPH');
END;

14.
CREATE INDEX QUOTES_TEXT_IDX ON quotes(text)
    INDEXTYPE IS CTXSYS.CONTEXT
    PARAMETERS('section group nullgroup');

15.
SELECT * FROM quotes
WHERE CONTAINS(text, '(fool & humans) within SENTENCE')>0;
SELECT * FROM quotes
WHERE CONTAINS(text, '(fool & computer) within SENTENCE')>0;

16.
SELECT * FROM quotes
WHERE CONTAINS(text, 'humans')>0;
--dash not in printjoins

17.
DROP INDEX QUOTES_TEXT_IDX;
BEGIN
    ctx_ddl.create_preference('lex_w_dash', 'BASIC_LEXER');
    ctx_ddl.set_attribute('lex_w_dash', 'printjoins', '-');
    ctx_ddl.set_attribute('lex_w_dash', 'index_text', 'YES');
END;
/
CREATE INDEX QUOTES_TEXT_IDX ON quotes(text)
    INDEXTYPE IS CTXSYS.CONTEXT
    PARAMETERS('lexer lex_w_dash');

18.
SELECT * FROM quotes
WHERE CONTAINS(text, 'humans')>0;

19.
SELECT * FROM quotes
WHERE CONTAINS(text, 'non\-humans')>0;

20.
DROP TABLE quotes;
BEGIN
    ctx_ddl.drop_preference('lex_w_dash');
END;
